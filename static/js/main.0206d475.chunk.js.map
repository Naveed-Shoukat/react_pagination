{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","maxPages","Math","ceil","pagesList","Array","fill","map","_item","index","pageNumber","className","classNames","active","href","onClick","disabled","defaultProps","items","from","to","numbers","n","push","getNumbers","App","useState","itemsPerPage","setItemsPerPage","setCurrentPage","startIndex","endIndex","length","visiableItems","filter","id","value","onChange","event","target","handelSelect","htmlFor","page","item","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAwB,SAAH,GAK3B,IAJLC,EAAK,EAALA,MACAC,EAAO,EAAPA,QAAQ,EAAD,EACPC,mBAAW,MAAG,EAAC,EACfC,EAAY,EAAZA,aAEMC,EAAWC,KAAKC,KAAKN,EAAQC,GAE7BM,EAAYC,MAAMJ,GAAUK,KAAK,GAAGC,KAAI,SAACC,EAAOC,GACpD,IAAMC,EAAaD,EAAQ,EAE3B,OACE,oBAEEE,UAAWC,IACT,YACA,CAAEC,OAAQH,IAAeX,IACzB,SAEF,mBACE,UAAQ,WACRY,UAAU,YACVG,KAAI,WAAMJ,GACVK,QAAS,WACPf,EAAaU,IACb,SAEDA,KAdEA,MAoBX,OACE,8BACE,qBAAIC,UAAU,aAAY,UACxB,oBACEA,UAAWC,IACT,YACA,CAAEI,SAA0B,IAAhBjB,IACZ,SAEF,mBACE,UAAQ,WACRY,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBf,EAAoB,OAAS,QAC5CgB,QAAS,WACHhB,EAAc,GAChBC,EAAaD,EAAc,IAE7B,oBAKLK,EACD,oBACEO,UAAWC,IACT,YACA,CAAEI,SAAUjB,IAAgBE,IAC5B,SAEF,mBACE,UAAQ,WACRU,UAAU,YACVG,KAAK,QACL,gBAAef,IAAgBE,EAAW,OAAS,QACnDc,QAAS,WACHhB,EAAcE,GAChBD,EAAaD,EAAc,IAE7B,0BAUdH,EAAWqB,aAAe,CACxBlB,YAAa,GCxFf,IAAMmB,ECLC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDFKG,CAAW,EAAG,IACzBjB,KAAI,SAAAe,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAAwCC,mBAAS,KAAI,mBAA9CC,EAAY,KAAEC,EAAe,KACpC,EAAsCF,mBAAS,GAAE,mBAA1C3B,EAAW,KAAE8B,EAAc,KAE5BC,GAAcH,GAAgB5B,EAAc,GAC5CgC,EAAYD,IAAcH,EAAgBT,EAAMc,OAClDF,EAAcZ,EAAMc,QAAUL,EAC9BG,IAAcH,EAEZM,EAAgBf,EAAMgB,QAAO,SAAC1B,EAAOC,GACzC,OAAOA,GAASqB,GAAcrB,EAAQsB,KAUxC,OACE,sBAAKpB,UAAU,YAAW,UACxB,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAAM,wBACvBZ,EAAW,mBAAW+B,EAAa,EAAC,cAAMC,EAAQ,eAAOb,EAAMc,OAAM,OAGhF,sBAAKrB,UAAU,iBAAgB,UAC7B,qBAAKA,UAAU,0BAAyB,SACtC,yBACE,UAAQ,kBACRwB,GAAG,kBACHxB,UAAU,eACVyB,MAAOT,EACPU,SAAU,SAACC,GAAK,OAtBL,SAACA,GACpBV,EAAgBU,EAAMC,OAAOH,OACT,IAAhBrC,GACF8B,EAAe,GAmBYW,CAAaF,IAAO,UAEzC,wBAAQF,MAAM,IAAG,eACjB,wBAAQA,MAAM,IAAG,eACjB,wBAAQA,MAAM,KAAI,gBAClB,wBAAQA,MAAM,KAAI,qBAItB,uBAAOK,QAAQ,kBAAkB9B,UAAU,qBAAoB,+BAKjE,cAAC,EAAU,CACTd,MAAOqB,EAAMc,OACblC,SAAU6B,EACV5B,YAAaA,EACbC,aAAc,SAAC0C,GAAI,OACjBA,IAAS3C,GAAe8B,EAAea,MAI3C,6BACGT,EAAc1B,KAAI,SAAAoC,GAAI,OACrB,oBAAe,UAAQ,OAAM,SAAEA,GAAtBA,YEjEnBC,IAASC,OAAO,cAAC,EAAG,IAAKC,SAASC,eAAe,W","file":"static/js/main.0206d475.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { FC } from 'react';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage?: number\n  onPageChange: (page: number) => void\n};\n\nexport const Pagination: FC<Props> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const maxPages = Math.ceil(total / perPage);\n\n  const pagesList = Array(maxPages).fill(0).map((_item, index) => {\n    const pageNumber = index + 1;\n\n    return (\n      <li\n        key={pageNumber}\n        className={classNames(\n          'page-item',\n          { active: pageNumber === currentPage },\n        )}\n      >\n        <a\n          data-cy=\"pageLink\"\n          className=\"page-link\"\n          href={`#${pageNumber}`}\n          onClick={() => {\n            onPageChange(pageNumber);\n          }}\n        >\n          {pageNumber}\n        </a>\n      </li>\n    );\n  });\n\n  return (\n    <div>\n      <ul className=\"pagination\">\n        <li\n          className={classNames(\n            'page-item',\n            { disabled: currentPage === 1 },\n          )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1 ? 'true' : 'false'}\n            onClick={() => {\n              if (currentPage > 1) {\n                onPageChange(currentPage - 1);\n              }\n            }}\n          >\n            «\n          </a>\n        </li>\n        {pagesList}\n        <li\n          className={classNames(\n            'page-item',\n            { disabled: currentPage === maxPages },\n          )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === maxPages ? 'true' : 'false'}\n            onClick={() => {\n              if (currentPage < maxPages) {\n                onPageChange(currentPage + 1);\n              }\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nPagination.defaultProps = {\n  currentPage: 1,\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState('5');\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const startIndex = +itemsPerPage * (currentPage - 1);\n  const endIndex = (startIndex + +itemsPerPage) > items.length\n    ? startIndex + (items.length % +itemsPerPage)\n    : startIndex + +itemsPerPage;\n\n  const visiableItems = items.filter((_item, index) => {\n    return index >= startIndex && index < endIndex;\n  });\n\n  const handelSelect = (event: ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(event.target.value);\n    if (currentPage !== 1) {\n      setCurrentPage(1);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startIndex + 1} - ${endIndex} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={(event) => handelSelect(event)}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={+itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={(page) => (\n          page !== currentPage && setCurrentPage(page)\n        )}\n      />\n\n      <ul>\n        {visiableItems.map(item => (\n          <li key={item} data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}